!pip install gradio
import pandas as pd
import numpy as np
import gradio as gr
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import StandardScaler

# Sample dataset (You can replace it with a real dataset)
data = {
    "Year": [2015, 2018, 2020, 2017, 2019, 2021, 2016, 2013, 2012, 2010],
    "Mileage": [30000, 20000, 15000, 40000, 10000, 5000, 35000, 60000, 75000, 90000],
    "EngineSize": [2.0, 1.8, 2.5, 1.6, 3.0, 2.2, 1.5, 1.4, 1.3, 1.2],
    "Horsepower": [150, 130, 180, 120, 200, 160, 110, 100, 90, 80],
    "Price": [15000, 18000, 22000, 14000, 25000, 27000, 13000, 10000, 9000, 7500],
}

# Convert to DataFrame
df = pd.DataFrame(data)

# Define features and target
X = df[["Year", "Mileage", "EngineSize", "Horsepower"]]
y = df["Price"]

# Scale the features for better model performance
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.2, random_state=42)

# Train the Linear Regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Function to make predictions
def predict_price(year, mileage, engine_size, horsepower):
    input_data = np.array([[year, mileage, engine_size, horsepower]])
    input_scaled = scaler.transform(input_data)  # Scale input
    price_pred = model.predict(input_scaled)[0]
    return f"Estimated Car Price: ${price_pred:.2f}"

# Create a Gradio interface
iface = gr.Interface(
    fn=predict_price,
    inputs=[
        gr.Number(label="Year of Manufacture"),
        gr.Number(label="Mileage (miles)"),
        gr.Number(label="Engine Size (L)"),
        gr.Number(label="Horsepower"),
    ],
    outputs=gr.Textbox(label="Predicted Price"),
    title="Car Price Prediction",
    description="Enter the car details to get the estimated price."
)

# Launch the app
iface.launch()

!pip install deep-translator
import gradio as gr
from deep_translator import GoogleTranslator

# Define the translation function
def translate_english_to_tamil(text):
    if not text.strip():  # Check if the input is empty
        return "Please enter some text."

    translator = GoogleTranslator(source="en", target="ta")  # "ta" = Tamil
    translated_text = translator.translate(text)
    return translated_text

# Create Gradio interface
iface = gr.Interface(
    fn=translate_english_to_tamil,
    inputs=gr.Textbox(label="Enter English Text"),
    outputs=gr.Textbox(label="Translated Tamil Text"),
    title="English to Tamil Translator",
    description="Type a sentence in English and get the Tamil translation instantly."
)

# Launch the Gradio app
iface.launch()
!pip install deep-translator
import gradio as gr
from deep_translator import GoogleTranslator

# Define the translation function
def translate_english_to_tamil(text):
    if not text.strip():  # Check if the input is empty
        return "Please enter some text."

    translator = GoogleTranslator(source="en", target="ta")  # "ta" = Tamil
    translated_text = translator.translate(text)
    return translated_text

# Create Gradio interface
iface = gr.Interface(
    fn=translate_english_to_tamil,
    inputs=gr.Textbox(label="Enter English Text"),
    outputs=gr.Textbox(label="Translated Tamil Text"),
    title="English to Tamil Translator",
    description="Type a sentence in English and get the Tamil translation instantly."
)

# Launch the Gradio app
iface.launch()
!pip install deep-translator
import gradio as gr
from deep_translator import GoogleTranslator

# Define the translation function
def translate_english_to_tamil(text):
    if not text.strip():  # Check if the input is empty
        return "Please enter some text."

    translator = GoogleTranslator(source="en", target="ta")  # "ta" = Tamil
    translated_text = translator.translate(text)
    return translated_text

# Create Gradio interface
iface = gr.Interface(
    fn=translate_english_to_tamil,
    inputs=gr.Textbox(label="Enter English Text"),
    outputs=gr.Textbox(label="Translated Tamil Text"),
    title="English to Tamil Translator",
    description="Type a sentence in English and get the Tamil translation instantly."
)

# Launch the Gradio app
iface.launch()
!pip install deep-translator
import gradio as gr
from deep_translator import GoogleTranslator

# Define the translation function
def translate_english_to_tamil(text):
    if not text.strip():  # Check if the input is empty
        return "Please enter some text."

    translator = GoogleTranslator(source="en", target="ta")  # "ta" = Tamil
    translated_text = translator.translate(text)
    return translated_text

# Create Gradio interface
iface = gr.Interface(
    fn=translate_english_to_tamil,
    inputs=gr.Textbox(label="Enter English Text"),
    outputs=gr.Textbox(label="Translated Tamil Text"),
    title="English to Tamil Translator",
    description="Type a sentence in English and get the Tamil translation instantly."
)

# Launch the Gradio app
iface.launch()
